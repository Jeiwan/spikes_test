h1 Заявки на поставку

= form_tag admin_settings_threshold_path, id: "quantity_threshold", method: :patch, remote: true, type: :js
  .row
    .col-md-12
      = label_tag "Минимальное количество товара, после достижения которого автоматически создается заявка на поставку:"
      = text_field_tag :threshold, @settings[:quantity_threshold]
      = submit_tag "Установить"
      span.status
        span.ok.text-success
          span.glyphicon.glyphicon-ok
          span.message Установлено
        span.no.text-danger
          span.glyphicon.glyphicon-remove
          span.message Ошибка

= link_to "Создать заявку", "#", class: "btn btn-primary"
= simple_form_for Admin::Request.new do |f|
  = f.error_notification
  h3 Товары
  #products
    = f.simple_fields_for :request_positions, @request.request_positions  do |request_position|
      = render "request_position_fields", f: request_position
    .links
      = link_to_add_association "Добавить позицию", f, :request_positions
  = f.submit "Создать", class: "btn btn-success"

= form_tag "requests/merge"
  table.all-requests.table
    thead
      tr
        th
        th Статус
        th Дата
        th Наименование
        th Количество
        th
    tbody
      - @requests.each do |request|
        - request.request_positions.each_with_index do |position, index|
            tr class="#{ index == 0 ? request.status : ''}"
              td = (index == 0 && request.fresh?) ? (check_box_tag 'merge_requests[]', request.id, false, id: "merge_request_#{request.id}") : ''
              td = index == 0 ? request_status(request.status) : ''
              td = index == 0 ? request.created_at.strftime("%R %D") : ''
              td = position.article.name
              td = position.quantity
              td = index == 0 ? request_controls(request) : ''
  = submit_tag "Объединить заявки"

= paginate @requests
